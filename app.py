import streamlit as st
import pandas as pd
import numpy as np
from prophet import Prophet
from prophet.diagnostics import performance_metrics
from prophet.diagnostics import cross_validation
from prophet.plot import plot_cross_validation_metric
from prophet.plot import plot_plotly, plot_components_plotly
import base64

st.title('üìà –ê–≤—Ç–æ–º–∞—Ç–∏–∑–æ–≤–∞–Ω–µ –ø—Ä–æ–≥–Ω–æ–∑—É–≤–∞–Ω–Ω—è —á–∞—Å–æ–≤–∏—Ö —Ä—è–¥—ñ–≤')

"""
–¶—è –ø—Ä–æ–≥—Ä–∞–º–∞ –¥–∞–Ω–∏—Ö –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É Prophet –∑ –≤—ñ–¥–∫—Ä–∏—Ç–∏–º –∫–æ–¥–æ–º Facebook –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–∞–π–±—É—Ç–Ω—ñ—Ö –ø—Ä–æ–≥–Ω–æ–∑–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å —ñ–∑ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ–≥–æ –Ω–∞–±–æ—Ä—É –¥–∞–Ω–∏—Ö.
–í–∏ –∑–º–æ–∂–µ—Ç–µ —ñ–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ —Å–≤–æ—ó –¥–∞–Ω—ñ –∑ —Ñ–∞–π–ª—É CSV, –≤—ñ–∑—É–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ç–µ–Ω–¥–µ–Ω—Ü—ñ—ó —Ç–∞ —Ñ—É–Ω–∫—Ü—ñ—ó, –ø—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –ø—Ä–æ–≥–Ω–æ–∑—É —Ç–∞, –Ω–∞—Ä–µ—à—Ç—ñ, –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑ üòµ 

"""

"""
### –ö—Ä–æ–∫ 1. –Ü–º–ø–æ—Ä—Ç –¥–∞–Ω–∏—Ö
"""
df = st.file_uploader('–Ü–º–ø–æ—Ä—Ç—É–π—Ç–µ —Ñ–∞–π–ª csv —á–∞—Å–æ–≤–æ–≥–æ —Ä—è–¥—É —Å—é–¥–∏. –°—Ç–æ–≤–ø—Ü—ñ –ø–æ–≤–∏–Ω–Ω—ñ –º–∞—Ç–∏ –ø–æ–∑–Ω–∞—á–∫–∏ ds —ñ y. –í—Ö—ñ–¥–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏ –¥–ª—è Prophet –∑–∞–≤–∂–¥–∏ —î —Ñ—Ä–µ–π–º –¥–∞–Ω–∏—Ö —ñ–∑ –¥–≤–æ–º–∞ —Å—Ç–æ–≤–ø—Ü—è–º–∏: ds —ñ y. –°—Ç–æ–≤–ø–µ—Ü—å ds (—à—Ç–∞–º–ø –¥–∞—Ç–∏) –º–∞—î –º–∞—Ç–∏ —Ñ–æ—Ä–º–∞—Ç, –æ—á—ñ–∫—É–≤–∞–Ω–∏–π Pandas, –≤ —ñ–¥–µ–∞–ª—ñ –†–†–†–†-–ú–ú-–î–î –¥–ª—è –¥–∞—Ç–∏ –∞–±–æ –†–†–†–†-–ú–ú-–î–î –ì–ì:–•–•:–°–° –¥–ª—è –ø–æ–∑–Ω–∞—á–∫–∏ —á–∞—Å—É. –°—Ç–æ–≤–ø–µ—Ü—å y –º–∞—î –±—É—Ç–∏ —á–∏—Å–ª–æ–≤–∏–º —ñ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç–∏ –≤–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è, —è–∫–µ –º–∏ —Ö–æ—á–µ–º–æ —Å–ø—Ä–æ–≥–Ω–æ–∑—É–≤–∞—Ç–∏.', type='csv')

st.info(
            f"""
                üëÜ –°–ø–æ—á–∞—Ç–∫—É –∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Ñ–∞–π–ª .csv. –ó—Ä–∞–∑–æ–∫: [peyton_manning_wiki_ts.csv](https://raw.githubusercontent.com/zachrenwick/streamlit_forecasting_app/master/example_data/example_wp_log_peyton_manning.csv)
                """
        )

if df is not None:
    data = pd.read_csv(df)
    data['ds'] = pd.to_datetime(data['ds'],errors='coerce') 
    
    st.write(data)
    
    max_date = data['ds'].max()
    st.write(max_date)

"""
### –ö—Ä–æ–∫ 2: –í–∏–±–µ—Ä—ñ—Ç—å –≥–æ—Ä–∏–∑–æ–Ω—Ç –ø—Ä–æ–≥–Ω–æ–∑—É

–ú–∞–π—Ç–µ –Ω–∞ —É–≤–∞–∑—ñ, —â–æ –ø—Ä–æ–≥–Ω–æ–∑–∏ —Å—Ç–∞—é—Ç—å –º–µ–Ω—à —Ç–æ—á–Ω–∏–º–∏ –∑ –±—ñ–ª—å—à–∏–º–∏ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–º–∏ –ø—Ä–æ–≥–Ω–æ–∑—É–≤–∞–Ω–Ω—è.
"""

periods_input = st.number_input('–ù–∞ —Å–∫—ñ–ª—å–∫–∏ –ø–µ—Ä—ñ–æ–¥—ñ–≤ –≤–∏ –± —Ö–æ—Ç—ñ–ª–∏ —Å–ø—Ä–æ–≥–Ω–æ–∑—É–≤–∞—Ç–∏ –º–∞–π–±—É—Ç–Ω—î?',
min_value = 1, max_value = 365)

if df is not None:
    m = Prophet()
    m.fit(data)

"""
### –ö—Ä–æ–∫ 3: –≤—ñ–∑—É–∞–ª—ñ–∑—É–π—Ç–µ –¥–∞–Ω—ñ –ø—Ä–æ–≥–Ω–æ–∑—É

–ù–∞–≤–µ–¥–µ–Ω–µ –Ω–∏–∂—á–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–∫–∞–∑—É—î –º–∞–π–±—É—Ç–Ω—ñ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è. ¬´—Ü–µ¬ª —î –ø—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω–∏–º –∑–Ω–∞—á–µ–Ω–Ω—è–º, –∞ –≤–µ—Ä—Ö–Ω—è —Ç–∞ –Ω–∏–∂–Ω—è –º–µ–∂—ñ (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º) —Å—Ç–∞–Ω–æ–≤–ª—è—Ç—å 80% –¥–æ–≤—ñ—Ä—á–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª.
"""
if df is not None:
    future = m.make_future_dataframe(periods=periods_input)
    
    forecast = m.predict(future)
    fcst = forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']]

    fcst_filtered =  fcst[fcst['ds'] > max_date]    
    st.write(fcst_filtered)
    
    """
    –ù–∞—Å—Ç—É–ø–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–∫–∞–∑—É—î —Ñ–∞–∫—Ç–∏—á–Ω—ñ (—á–æ—Ä–Ω—ñ –∫—Ä–∞–ø–∫–∏) —ñ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω—ñ (—Å–∏–Ω—è –ª—ñ–Ω—ñ—è) –∑–Ω–∞—á–µ–Ω–Ω—è –∑ —á–∞—Å–æ–º.
    """
    fig1 = m.plot(forecast)
    st.write(fig1)

    """
    –ù–∞—Å—Ç—É–ø–Ω—ñ –∫—ñ–ª—å–∫–∞ –≤—ñ–∑—É–∞–ª—å–Ω–∏—Ö –∑–æ–±—Ä–∞–∂–µ–Ω—å –ø–æ–∫–∞–∑—É—é—Ç—å –≤–∏—Å–æ–∫–æ—Ä—ñ–≤–Ω–µ–≤—É —Ç–µ–Ω–¥–µ–Ω—Ü—ñ—é –ø—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å, —Ç–µ–Ω–¥–µ–Ω—Ü—ñ—ó –¥–Ω—ñ–≤ —Ç–∏–∂–Ω—è —Ç–∞ —Ä—ñ—á–Ω—ñ —Ç–µ–Ω–¥–µ–Ω—Ü—ñ—ó (—è–∫—â–æ –Ω–∞–±—ñ—Ä –¥–∞–Ω–∏—Ö –æ—Ö–æ–ø–ª—é—î –∫—ñ–ª—å–∫–∞ —Ä–æ–∫—ñ–≤). –ó–∞—à—Ç—Ä–∏—Ö–æ–≤–∞–Ω–∞ –±–ª–∞–∫–∏—Ç–Ω–∏–º –∫–æ–ª—å–æ—Ä–æ–º –∑–æ–Ω–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –≤–µ—Ä—Ö–Ω—ñ–π —ñ –Ω–∏–∂–Ω—ñ–π –¥–æ–≤—ñ—Ä—á—ñ —ñ–Ω—Ç–µ—Ä–≤–∞–ª–∏.
    """
    fig2 = m.plot_components(forecast)
    st.write(fig2)

    fig3 = plot_plotly(m, forecast)
    st.write(fig3)

    fig4 = plot_components_plotly(m, forecast)
    st.write(fig4)
            


"""
### –ö—Ä–æ–∫ 4: –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –¥–∞–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑

–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∏–∂—á–µ –¥–æ–∑–≤–æ–ª—è—î –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —â–æ–π–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –≤–∞—à –∫–æ–º–ø‚Äô—é—Ç–µ—Ä –¥–ª—è –ø–æ–¥–∞–ª—å—à–æ–≥–æ –∞–Ω–∞–ª—ñ–∑—É —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è.
"""
if df is not None:
    csv_exp = fcst_filtered.to_csv(index=False)
    # When no file name is given, pandas returns the CSV as a string, nice.
    b64 = base64.b64encode(csv_exp.encode()).decode()  # some strings <-> bytes conversions necessary here
    href = f'<a href="data:file/csv;base64,{b64}">Download CSV File</a> (right-click and save as ** &lt;forecast_name&gt;.csv**)'
    st.markdown(href, unsafe_allow_html=True)

reg = regressor_coefficients(m)
st.write(reg)


